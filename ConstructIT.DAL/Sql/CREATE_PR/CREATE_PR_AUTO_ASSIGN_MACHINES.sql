CREATE PROCEDURE PR_AUTO_ASSIGN_MACHINES
AS

	DECLARE @T_TASK_PRIORITIES TABLE
	(
		V_TASK_ID INT,
		V_PRIORITY FLOAT,
		V_DATE_UNTIL DATETIME		
	)

	DECLARE @T_RESOURCE_QUANTITIES TABLE
	(
		V_RESOURCE_ID INT,
		V_QUANTITY INT
	)

	DECLARE CUR_RESOURCE CURSOR  FOR
	SELECT V_RESOURCE_ID FROM @T_RESOURCE_QUANTITIES
	
	DECLARE @C_CURRENT_RESOURCE INT

	DECLARE @T_REQUIREMENTS_FOR_RESOURCES TABLE
	(
		V_REQUIREMENT_ID INT,
		V_TASK_ID INT,
		V_QUANTITY_NEEDED INT
	)

	DECLARE @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY INT

	DECLARE @T_REQUIREMENTS_WITH_PRIORITIES TABLE
	( 
		V_REQUIREMENT_ID INT,
		V_TASK_ID INT,
		V_QUANTITY_NEEDED INT,
		V_QUANTITY_SERVED INT,
		V_PRIORITY FLOAT
	)

	DECLARE @T_MATCHING_RESOURCES TABLE
	(
		V_MASINA_ID INT,
		V_AVAILABLE_QUANTITY INT
	)

	DECLARE @V_QUANTITY_NEEDED_SUM INT

	DECLARE @V_MAX_PRIORITY FLOAT
	DECLARE @T_REQUIREMENTS_MAX_PRIORITY TABLE
	(
		V_REQUIREMENT_ID INT,
		V_TASK_ID INT,
		V_QUANTITY_NEEDED INT,
		V_QUANTITY_SERVED INT
	)

	DECLARE @V_MIN_SERVED INT
	DECLARE @T_CANDIDATES TABLE
	(
		V_REQUIREMENT_ID INT
	)

	DECLARE @V_CANDIDATES_COUNT FLOAT
	DECLARE @V_ONE_DIVIDED FLOAT
	DECLARE @V_RAND FLOAT
	DECLARE @V_WINNER_POSITION INT = 1 --JER JE OD 0 DO 1 PRVA POTREBA, NE NULTA
	DECLARE @V_MULTIPLIED_DIVISION FLOAT
	DECLARE @WINNER_REQUIREMENT_ID INT

	DECLARE @V_RESOURCE_ASSIGNED INT
	DECLARE @V_PROJEKAT_ID INT
	DECLARE @V_ZADATAK_ID INT

BEGIN

	-----------------------ODREDjIVANJE PRIORITETA-------------------------------------------

	insert into @T_TASK_PRIORITIES (V_TASK_ID, V_PRIORITY, V_DATE_UNTIL)
	select Zadatak.ZadatakID, Prioritet.PrioritetTezina, Zadatak.ZadatakDatumZavrsetka from Zadatak, Prioritet
	where zadatak.prioritetID=prioritet.prioritetID AND CONVERT(DATE, Zadatak.ZadatakDatumZavrsetka) >= CONVERT(DATE, GETDATE());

	UPDATE @T_TASK_PRIORITIES
	SET V_PRIORITY = V_PRIORITY + 0.21
	WHERE DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, V_DATE_UNTIL)) <=2;
	
	UPDATE @T_TASK_PRIORITIES
	SET V_PRIORITY = V_PRIORITY + 0.1
	WHERE DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, V_DATE_UNTIL)) <=4 AND DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, V_DATE_UNTIL)) >2;

	SELECT * FROM @T_TASK_PRIORITIES;

	----------------------KOLEKTOVANJE MASINA SA DOSTUPNIM KOLICINAMA-----------------------

	INSERT INTO @T_RESOURCE_QUANTITIES (V_RESOURCE_ID, V_QUANTITY)
	SELECT TipMasine.TipMasineID, sum(Masina.MasinaDostupnaKolicina) FROM TipMasine, Masina
	WHERE TipMasine.TipMasineID=Masina.TipMasineID GROUP BY TipMasine.TipMasineID;

	--select * from @T_RESOURCE_QUANTITIES;

	---------------------------------OTVARANjE KURSORA-------------------------------------

	OPEN CUR_RESOURCE;
	FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;

	--SELECT * FROM PotrebaTipaMasine;


	--------------------------------ITERIRANJE KROZ RESURSE I RAD SA NJIMA-----------------------
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		-----------------------------PRIKUPLJANJE ZAHTEVA ZA TRENUTNI RESURS, PRI CEMU MORA BITI TRAZEN ZA DANASNJI DAN------------
		INSERT INTO @T_REQUIREMENTS_FOR_RESOURCES (V_REQUIREMENT_ID, V_TASK_ID, V_QUANTITY_NEEDED)
		SELECT PotrebaTipaMasine.PotrebaTipaMasineID, PotrebaTipaMasine.ZadatakID, PotrebaTipaMasine.PotrTipaMasKolicina FROM PotrebaTipaMasine
		WHERE PotrebaTipaMasine.TipMasineID=@C_CURRENT_RESOURCE AND CONVERT(DATE, GETDATE()) >= CONVERT(DATE, PotrebaTipaMasine.PotrTipaMasOdDatuma) AND CONVERT(DATE, GETDATE()) <= CONVERT(DATE, PotrebaTipaMasine.PotrTipaMasDoDatuma);
		
		--SELECT * FROM @T_REQUIREMENTS_FOR_RESOURCES;

		----------------------------------PROVERA DA LI UOPSTE IMA ZAHTEVA---------------------------------------------------------
		IF NOT EXISTS( SELECT * FROM @T_REQUIREMENTS_FOR_RESOURCES)
		BEGIN
			DELETE FROM @T_REQUIREMENTS_FOR_RESOURCES;
			DELETE FROM @T_REQUIREMENTS_WITH_PRIORITIES;
			DELETE FROM @T_MATCHING_RESOURCES;

			FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;

			CONTINUE;
		END

				-------------------------------------DOSTUPNA KOLICINA TRENUTNOG RESURSA----------------------------------------------------
		SELECT @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY = V_QUANTITY FROM @T_RESOURCE_QUANTITIES WHERE V_RESOURCE_ID=@C_CURRENT_RESOURCE;


		------------------------------------------CONTINUE UKOLIKO NE POSTOJI DOSTUPAN RESURS TRENUTNOG TIPA------------------------
		IF(@V_CURRENT_RESOURCE_AVAILABLE_QUANTITY=0)
		BEGIN
			DELETE FROM @T_REQUIREMENTS_FOR_RESOURCES;
			DELETE FROM @T_REQUIREMENTS_WITH_PRIORITIES;
			DELETE FROM @T_MATCHING_RESOURCES;

			FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;

			CONTINUE;
		END

		----------------------------------------DOSTUPNI PROIZVODNI RADNICI S TOM STRUKOM (IZBACUJE SE STALNO DODELJENI)------------
		INSERT INTO @T_MATCHING_RESOURCES (V_MASINA_ID, V_AVAILABLE_QUANTITY)
		SELECT Masina.MasinaID, Masina.MasinaDostupnaKolicina FROM Masina
		WHERE TipMasineID=@C_CURRENT_RESOURCE;
		
		SELECT * FROM @T_MATCHING_RESOURCES;


		-----------------------------------------MERGE REKVAJRMENTA SA PRIORITETIMA-------------------------------------------------
		INSERT INTO @T_REQUIREMENTS_WITH_PRIORITIES (V_REQUIREMENT_ID, V_TASK_ID, V_QUANTITY_NEEDED, V_QUANTITY_SERVED, V_PRIORITY)
		SELECT TRFR.V_REQUIREMENT_ID, TRFR.V_TASK_ID, TRFR.V_QUANTITY_NEEDED, 0, TTP.V_PRIORITY
		FROM @T_REQUIREMENTS_FOR_RESOURCES AS TRFR,  @T_TASK_PRIORITIES AS TTP
		WHERE TRFR.V_TASK_ID=TTP.V_TASK_ID;

		SELECT * FROM @T_REQUIREMENTS_WITH_PRIORITIES;


		-----------------------------------------------KOLIKO IH JE UKUPNO POTREBNO-------------------------------------------------
		SELECT @V_QUANTITY_NEEDED_SUM = SUM(TRWP.V_QUANTITY_NEEDED) FROM @T_REQUIREMENTS_WITH_PRIORITIES AS TRWP;


		---------------------------------------------RAD DOK IMA DOSTUPNOG RESURSA---------------------------------------------------
		WHILE (@V_CURRENT_RESOURCE_AVAILABLE_QUANTITY > 0 AND @V_QUANTITY_NEEDED_SUM > 0)
		BEGIN

			-------------------------------------------SELEKCIJA MAKSIMALNOG PRIORITETA----------------------------------------------
			SELECT @V_MAX_PRIORITY = MAX(TRWT.V_PRIORITY) FROM @T_REQUIREMENTS_WITH_PRIORITIES AS TRWT WHERE TRWT.V_QUANTITY_NEEDED != 0;

			--------------------------------------------SELEKCIJA TORKI SA MAKSIMALNIM PRIORITETOM-----------------------------------
			INSERT INTO @T_REQUIREMENTS_MAX_PRIORITY (V_REQUIREMENT_ID, V_TASK_ID, V_QUANTITY_NEEDED, V_QUANTITY_SERVED)
			SELECT TRWT.V_REQUIREMENT_ID, TRWT.V_TASK_ID, TRWT.V_QUANTITY_NEEDED, TRWT.V_QUANTITY_SERVED
			FROM @T_REQUIREMENTS_WITH_PRIORITIES AS TRWT WHERE TRWT.V_PRIORITY=@V_MAX_PRIORITY AND TRWT.V_QUANTITY_NEEDED != 0;


						--------------------------------------------ODABIR MINIMUMA USLUZENIH, RADI PRAVICNE RASPODELE---------------------------
			SELECT @V_MIN_SERVED = MIN(TRM.V_QUANTITY_SERVED) FROM @T_REQUIREMENTS_MAX_PRIORITY AS TRM;

			INSERT INTO @T_CANDIDATES (V_REQUIREMENT_ID)
			SELECT TRM.V_REQUIREMENT_ID FROM @T_REQUIREMENTS_MAX_PRIORITY AS TRM WHERE TRM.V_QUANTITY_SERVED=@V_MIN_SERVED;

			------------------------------------------PREGLED BROJA ZA USLUZIVANjE, RADI RANDOM DODELE--------------------------------
			SELECT @V_CANDIDATES_COUNT = COUNT(TC.V_REQUIREMENT_ID) FROM @T_CANDIDATES AS TC;

			----------------------------------------DELJENJE 1 RADI DODELE RANDOMA------------------------
			SET @V_ONE_DIVIDED = 1/@V_CANDIDATES_COUNT;

			----------------------------------------RANDOM BROJ OD 0 - 1-------------------------------
			SET @V_RAND = RAND();

			----------------------------------------KRECE SE OD PRVOG - DA LI JE ON DOBITNIK?----------
			SET @V_MULTIPLIED_DIVISION = @V_ONE_DIVIDED;

			SET @V_WINNER_POSITION = 1;
			-----------------------------------------DOBITNIK JE ONAJ KOJI JE >= OD RANDOMA
			WHILE(@V_MULTIPLIED_DIVISION<=@V_RAND)
			BEGIN
				
				SET @V_MULTIPLIED_DIVISION = @V_MULTIPLIED_DIVISION + @V_ONE_DIVIDED;
				-------------- PODATAK O POBEDNICKOJ POZICIJI----------------------------------
				SET @V_WINNER_POSITION = @V_WINNER_POSITION + 1;

			END

						--------------------------------------- UZIMA SE POBEDNICKI ID------------------------
			;WITH CTE AS
			(
				SELECT *, ROW_NUMBER() OVER (ORDER BY V_REQUIREMENT_ID) AS RN
				FROM @T_CANDIDATES
			)
			SELECT @WINNER_REQUIREMENT_ID = V_REQUIREMENT_ID FROM CTE WHERE RN = @V_WINNER_POSITION;


			SELECT * FROM @T_MATCHING_RESOURCES;

			--------------------------------------UZIMA SE PRVA MASINA KOJA JE DOSTUPNA--------------
			SELECT TOP 1 @V_RESOURCE_ASSIGNED = TMR.V_MASINA_ID
			FROM @T_MATCHING_RESOURCES AS TMR WHERE TMR.V_AVAILABLE_QUANTITY>0;--<<<<<<<<<-=-=-=-=- USLOV


			------------------------------------PRIKUPLJANJE PODATAKA ZA INSERT-------------------
			SELECT @V_PROJEKAT_ID=PotrebaTipaMasine.ProjekatID, @V_ZADATAK_ID= PotrebaTipaMasine.ZadatakID
			FROM PotrebaTipaMasine WHERE PotrebaTipaMasineID = @WINNER_REQUIREMENT_ID;

			------------------------------------------INSERT--------------------------------------
			INSERT INTO EvidencijaAngazovanjaMasine (ProjekatID, ZadatakID, MasinaID, EvidAngMasDatum, EvidAngMasVremeOd, EvidAngMasVremeDo)
			VALUES (@V_PROJEKAT_ID, @V_ZADATAK_ID, @V_RESOURCE_ASSIGNED, CONVERT(DATE, GETDATE()), '08:00', '16:00');

			SELECT * FROM EvidencijaAngazovanjaMasine;


			--------------------------------------------UPDATE ZBOG DODELE-------------------------
			UPDATE @T_REQUIREMENTS_WITH_PRIORITIES
			SET V_QUANTITY_NEEDED = V_QUANTITY_NEEDED - 1,
				V_QUANTITY_SERVED = V_QUANTITY_SERVED + 1
			WHERE V_REQUIREMENT_ID = @WINNER_REQUIREMENT_ID;

			SET @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY = @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY - 1;
			SET @V_QUANTITY_NEEDED_SUM = @V_QUANTITY_NEEDED_SUM - 1;




			UPDATE @T_MATCHING_RESOURCES
			SET V_AVAILABLE_QUANTITY = V_AVAILABLE_QUANTITY - 1
			WHERE V_MASINA_ID=@V_RESOURCE_ASSIGNED;

			-------------------------------------PRAZNJENJE KORISCENIH TABELA-----------------------
			DELETE FROM @T_REQUIREMENTS_MAX_PRIORITY;
			DELETE FROM @T_CANDIDATES;

		END

		-------------------------------------PRAZNJENJE KORISCENIH TABELA-----------------------
		DELETE FROM @T_REQUIREMENTS_FOR_RESOURCES;
		DELETE FROM @T_MATCHING_RESOURCES;
		DELETE FROM @T_REQUIREMENTS_WITH_PRIORITIES;

		FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;
	END

	CLOSE CUR_RESOURCE;
	DEALLOCATE CUR_RESOURCE;
END
