CREATE PROCEDURE PR_AUTO_ASSIGN_MATERIAL
AS

	 DECLARE @T_TASK_PRIORITIES TABLE
	(
		V_TASK_ID INT,
		V_PRIORITY FLOAT,
		V_DATE_UNTIL DATETIME		
	)

	DECLARE @T_RESOURCE_QUANTITIES TABLE
	(
		V_RESOURCE_ID INT,
		V_QUANTITY INT
	)

	DECLARE CUR_RESOURCE CURSOR  FOR
	SELECT V_RESOURCE_ID FROM @T_RESOURCE_QUANTITIES

	DECLARE @C_CURRENT_RESOURCE INT

	DECLARE @T_REQUIREMENTS_FOR_RESOURCES TABLE
	(
		V_REQUIREMENT_ID INT,
		V_TASK_ID INT,
		V_QUANTITY_NEEDED INT
	)

	DECLARE @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY INT

	DECLARE @T_REQUIREMENTS_WITH_PRIORITIES TABLE
	( 
		V_REQUIREMENT_ID INT,
		V_TASK_ID INT,
		V_QUANTITY_NEEDED FLOAT,
		V_QUANTITY_SERVED FLOAT,
		V_PRIORITY FLOAT
	)

	DECLARE @V_QUANTITY_NEEDED_SUM FLOAT

	DECLARE @V_MAX_PRIORITY FLOAT
	DECLARE @T_REQUIREMENTS_MAX_PRIORITY TABLE
	(
		V_REQUIREMENT_ID INT,
		V_TASK_ID INT,
		V_QUANTITY_NEEDED FLOAT,
		V_QUANTITY_SERVED FLOAT
	)

	DECLARE @T_CANDIDATES TABLE
	(
		V_REQUIREMENT_ID INT,
		V_QUANTITY_NEEDED FLOAT
	)

	DECLARE @V_CANDIDATES_COUNT INT
	DECLARE @V_QUANTITY_NEEDED_SUM_CURRENT FLOAT

	DECLARE @V_CURRENT_REQUIREMENT INT
	DECLARE @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED FLOAT

	DECLARE @V_CURRENT_COUNT INT

	DECLARE @V_PROJEKAT_ID INT
	DECLARE @V_ZADATAK_ID INT

BEGIN

	-------------------PONISTAVANJE DODELA ZA DANASNJI DAN, UKOLIKO POSTOJE------------------

	DELETE DodelaMaterijala where DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, DodMatDatumDodele)) = 0;

	
	-----------------------ODREDjIVANJE PRIORITETA-------------------------------------------

	insert into @T_TASK_PRIORITIES (V_TASK_ID, V_PRIORITY, V_DATE_UNTIL)
	select Zadatak.ZadatakID, Prioritet.PrioritetTezina, Zadatak.ZadatakDatumZavrsetka from Zadatak, Prioritet
	where zadatak.prioritetID=prioritet.prioritetID AND CONVERT(DATE, Zadatak.ZadatakDatumZavrsetka) >= CONVERT(DATE, GETDATE());
	
	UPDATE @T_TASK_PRIORITIES
	SET V_PRIORITY = V_PRIORITY + 0.21
	WHERE DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, V_DATE_UNTIL)) <=2;
	
	UPDATE @T_TASK_PRIORITIES
	SET V_PRIORITY = V_PRIORITY + 0.1
	WHERE DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, V_DATE_UNTIL)) <=4 AND DATEDIFF(DAY, CONVERT(DATE, GETDATE()), CONVERT(DATE, V_DATE_UNTIL)) >2;

	--SELECT * FROM @T_TASK_PRIORITIES;

	----------------------KOLEKTOVANJE MATERIJALA SA DOSTUPNIM KOLICINAMA-----------------------

	INSERT INTO @T_RESOURCE_QUANTITIES (V_RESOURCE_ID, V_QUANTITY)
	SELECT Materijal.MaterijalID, Materijal.MaterijalRaspolozivaKolicina  FROM Materijal;

	--select * from @T_RESOURCE_QUANTITIES;

	---------------------------------OTVARANjE KURSORA-------------------------------------

	OPEN CUR_RESOURCE;
	FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;

	--SELECT * FROM PotrebaMaterijal;

		--------------------------------ITERIRANJE KROZ RESURSE I RAD SA NJIMA-----------------------
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		-----------------------------PRIKUPLJANJE ZAHTEVA ZA TRENUTNI RESURS, PRI CEMU MORA BITI TRAZEN ZA DANASNJI DAN------------
		INSERT INTO @T_REQUIREMENTS_FOR_RESOURCES (V_REQUIREMENT_ID, V_TASK_ID, V_QUANTITY_NEEDED)
		SELECT PotrebaMaterijala.PotrebaMaterijalaID, PotrebaMaterijala.ZadatakID, PotrebaMaterijala.PotrMatKolicina FROM PotrebaMaterijala
		WHERE PotrebaMaterijala.MaterijalID = @C_CURRENT_RESOURCE AND CONVERT(DATE, GETDATE()) >= CONVERT(DATE, PotrebaMaterijala.PotrMatOdDatuma) AND CONVERT(DATE, GETDATE()) <= CONVERT(DATE, PotrebaMaterijala.PotrMatDoDatuma) AND PotrMatKolicina != 0;
		
		--SELECT * FROM @T_REQUIREMENTS_FOR_RESOURCES;

		----------------------------------PROVERA DA LI UOPSTE IMA ZAHTEVA---------------------------------------------------------
		IF NOT EXISTS( SELECT * FROM @T_REQUIREMENTS_FOR_RESOURCES)
		BEGIN
			DELETE FROM @T_REQUIREMENTS_FOR_RESOURCES;
			DELETE FROM @T_REQUIREMENTS_WITH_PRIORITIES;

			FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;

			CONTINUE;
		END

		-------------------------------------DOSTUPNA KOLICINA TRENUTNOG RESURSA----------------------------------------------------
		SELECT @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY = V_QUANTITY FROM @T_RESOURCE_QUANTITIES WHERE V_RESOURCE_ID=@C_CURRENT_RESOURCE;


				------------------------------------------CONTINUE UKOLIKO NE POSTOJI DOSTUPAN RESURS TRENUTNOG TIPA------------------------
		IF(@V_CURRENT_RESOURCE_AVAILABLE_QUANTITY=0)
		BEGIN
			DELETE FROM @T_REQUIREMENTS_FOR_RESOURCES;
			DELETE FROM @T_REQUIREMENTS_WITH_PRIORITIES;

			FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;

			CONTINUE;
		END

		-----------------------------------------MERGE REKVAJRMENTA SA PRIORITETIMA-------------------------------------------------
		INSERT INTO @T_REQUIREMENTS_WITH_PRIORITIES (V_REQUIREMENT_ID, V_TASK_ID, V_QUANTITY_NEEDED, V_QUANTITY_SERVED, V_PRIORITY)
		SELECT TRFR.V_REQUIREMENT_ID, TRFR.V_TASK_ID, TRFR.V_QUANTITY_NEEDED, 0, TTP.V_PRIORITY
		FROM @T_REQUIREMENTS_FOR_RESOURCES AS TRFR,  @T_TASK_PRIORITIES AS TTP
		WHERE TRFR.V_TASK_ID=TTP.V_TASK_ID;

		--SELECT * FROM @T_REQUIREMENTS_WITH_PRIORITIES;

		-----------------------------------------------KOLIKO IH JE UKUPNO POTREBNO-------------------------------------------------
		SELECT @V_QUANTITY_NEEDED_SUM = SUM(TRWP.V_QUANTITY_NEEDED) FROM @T_REQUIREMENTS_WITH_PRIORITIES AS TRWP;


		---------------------------------------------RAD DOK IMA DOSTUPNOG RESURSA---------------------------------------------------
		WHILE (@V_CURRENT_RESOURCE_AVAILABLE_QUANTITY > 0 AND @V_QUANTITY_NEEDED_SUM > 0)
		BEGIN

			-------------------------------------------SELEKCIJA MAKSIMALNOG PRIORITETA----------------------------------------------
			SELECT @V_MAX_PRIORITY = MAX(TRWT.V_PRIORITY) FROM @T_REQUIREMENTS_WITH_PRIORITIES AS TRWT WHERE TRWT.V_QUANTITY_NEEDED != 0;


			--------------------------------------------SELEKCIJA TORKI SA MAKSIMALNIM PRIORITETOM-----------------------------------
			INSERT INTO @T_REQUIREMENTS_MAX_PRIORITY (V_REQUIREMENT_ID, V_TASK_ID, V_QUANTITY_NEEDED, V_QUANTITY_SERVED)
			SELECT TRWT.V_REQUIREMENT_ID, TRWT.V_TASK_ID, TRWT.V_QUANTITY_NEEDED, TRWT.V_QUANTITY_SERVED
			FROM @T_REQUIREMENTS_WITH_PRIORITIES AS TRWT WHERE TRWT.V_PRIORITY=@V_MAX_PRIORITY AND TRWT.V_QUANTITY_SERVED = 0;


			INSERT INTO @T_CANDIDATES (V_REQUIREMENT_ID, V_QUANTITY_NEEDED)
			SELECT TRM.V_REQUIREMENT_ID, TRM.V_QUANTITY_NEEDED FROM @T_REQUIREMENTS_MAX_PRIORITY AS TRM ORDER BY V_QUANTITY_NEEDED ASC; -- ORDER BY ZBOG OSTATAKA PRI INT MNOZENJU SA FLOAT

			------------------------------------------PREGLED BROJA ZA USLUZIVANjE, RADI RANDOM DODELE--------------------------------
			SELECT @V_CANDIDATES_COUNT = COUNT(TC.V_REQUIREMENT_ID), @V_QUANTITY_NEEDED_SUM_CURRENT = SUM(TC.V_QUANTITY_NEEDED) FROM @T_CANDIDATES AS TC;


			IF (@V_CURRENT_RESOURCE_AVAILABLE_QUANTITY >= @V_QUANTITY_NEEDED_SUM_CURRENT)
			BEGIN

				WHILE(EXISTS(SELECT V_REQUIREMENT_ID FROM @T_CANDIDATES))
				BEGIN
					SELECT TOP 1 @V_CURRENT_REQUIREMENT=V_REQUIREMENT_ID, @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED = V_QUANTITY_NEEDED FROM @T_CANDIDATES;

					SELECT @V_PROJEKAT_ID = ProjekatID, @V_ZADATAK_ID = ZadatakID FROM PotrebaMaterijala WHERE PotrebaMaterijalaID = @V_CURRENT_REQUIREMENT;

					INSERT INTO DodelaMaterijala (PotrebaMaterijalaID, DodMatDatumDodele, DodMatKolicina)
					VALUES (@V_CURRENT_REQUIREMENT, CONVERT(DATE, GETDATE()), @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED);

					SET @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY = @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY - @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED;
					SET @V_QUANTITY_NEEDED_SUM = @V_QUANTITY_NEEDED_SUM - @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED;

					UPDATE @T_REQUIREMENTS_WITH_PRIORITIES
					SET V_QUANTITY_NEEDED = 0, V_QUANTITY_SERVED = @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED
					WHERE V_REQUIREMENT_ID=@V_CURRENT_REQUIREMENT; 

					DELETE TOP (1) FROM @T_CANDIDATES;
				END

			END
			ELSE
			BEGIN
				WHILE(EXISTS(SELECT V_REQUIREMENT_ID FROM @T_CANDIDATES))
				BEGIN
					SELECT TOP 1 @V_CURRENT_REQUIREMENT=V_REQUIREMENT_ID, @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED = V_QUANTITY_NEEDED FROM @T_CANDIDATES;

					SELECT @V_CURRENT_COUNT = COUNT(V_REQUIREMENT_ID) FROM @T_CANDIDATES;

					IF (@V_CURRENT_COUNT = 1)
					BEGIN
						INSERT INTO DodelaMaterijala(PotrebaMaterijalaID,  DodMatDatumDodele, DodMatKolicina)
						VALUES (@V_CURRENT_REQUIREMENT, CONVERT(DATE, GETDATE()), @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY);

						SET @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY = 0;
						SET @V_QUANTITY_NEEDED_SUM = @V_QUANTITY_NEEDED_SUM - @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY;

						UPDATE @T_REQUIREMENTS_WITH_PRIORITIES
						SET V_QUANTITY_NEEDED = V_QUANTITY_NEEDED - @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY, V_QUANTITY_SERVED = @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY
						WHERE V_REQUIREMENT_ID=@V_CURRENT_REQUIREMENT;

						BREAK;
					END
					ELSE
					BEGIN
						DECLARE @V_PERCENT_OF_TOTAL FLOAT;
						SET @V_PERCENT_OF_TOTAL = @V_CURRENT_REQUIREMENT_QUANTITY_NEEDED/@V_QUANTITY_NEEDED_SUM_CURRENT;
						
						DECLARE @V_TOTAL_FOR_SERVING FLOAT;
						SET @V_TOTAL_FOR_SERVING = @V_PERCENT_OF_TOTAL*@V_CURRENT_RESOURCE_AVAILABLE_QUANTITY;

						INSERT INTO DodelaMaterijala (PotrebaMaterijalaID, DodMatDatumDodele, DodMatKolicina)
						VALUES (@V_CURRENT_REQUIREMENT, CONVERT(DATE, GETDATE()), @V_TOTAL_FOR_SERVING);

						SET @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY = @V_CURRENT_RESOURCE_AVAILABLE_QUANTITY - @V_TOTAL_FOR_SERVING;
						SET @V_QUANTITY_NEEDED_SUM = @V_QUANTITY_NEEDED_SUM - @V_TOTAL_FOR_SERVING;

						UPDATE @T_REQUIREMENTS_WITH_PRIORITIES
						SET V_QUANTITY_NEEDED = V_QUANTITY_NEEDED - @V_TOTAL_FOR_SERVING, V_QUANTITY_SERVED = @V_TOTAL_FOR_SERVING
						WHERE V_REQUIREMENT_ID=@V_CURRENT_REQUIREMENT; 

					END
						

					DELETE TOP (1) FROM @T_CANDIDATES;
				END
			END





			-------------------------------------PRAZNJENJE KORISCENIH TABELA-----------------------
			DELETE FROM @T_REQUIREMENTS_MAX_PRIORITY;
			DELETE FROM @T_CANDIDATES;


		END

		-------------------------------------PRAZNJENJE KORISCENIH TABELA-----------------------
		DELETE FROM @T_REQUIREMENTS_FOR_RESOURCES;
		DELETE FROM @T_REQUIREMENTS_WITH_PRIORITIES;

		FETCH NEXT FROM CUR_RESOURCE INTO @C_CURRENT_RESOURCE;
	END

	CLOSE CUR_RESOURCE;
	DEALLOCATE CUR_RESOURCE;

END