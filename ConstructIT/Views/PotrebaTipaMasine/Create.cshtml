@model ConstructIT.DAL.Models.PotrebaTipaMasine
@using ConstructIT.DAL.Models

@{
    ViewBag.Title = "Kreiranje potrebe tipa mašine";

    var _projekat = new Projekat();
    var _zadatak = new Zadatak();
}

<h2>Kreiraj</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4  style="padding-left: 3%">Potreba tipa mašine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => _projekat.ProjekatNaziv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="@ViewBag.ProjekatNaziv" disabled class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => _zadatak.ZadatakNaziv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="@ViewBag.ZadatakNaziv" disabled class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipMasineID, "Tip Mašine", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipMasineID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipMasineID, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PotrTipaMasOdDatuma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PotrTipaMasOdDatuma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PotrTipaMasOdDatuma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PotrTipaMasDoDatuma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PotrTipaMasDoDatuma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PotrTipaMasDoDatuma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PotrTipaMasKolicina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PotrTipaMasKolicina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PotrTipaMasKolicina, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ProjekatID, new { Value = ViewBag.ProjekatID })
        @Html.HiddenFor(model => model.ZadatakID, new { Value = ViewBag.ZadatakID })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Kreiraj" class="btn btn-default" />
            </div>
        </div>
    </div>
}

