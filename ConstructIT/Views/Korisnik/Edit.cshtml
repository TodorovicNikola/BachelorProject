@model ConstructIT.DAL.Models.Korisnik

@{
    ViewBag.Title = "Izmena korisnika";
}

<h2>Izmena</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4  style="padding-left: 3%">Korisnik</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.KorisnikID)

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikEMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KorisnikEMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KorisnikEMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikLozinka, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KorisnikLozinka, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KorisnikLozinka, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikPotvrdaLozinke, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KorisnikPotvrdaLozinke, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KorisnikPotvrdaLozinke, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikIme, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KorisnikIme, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KorisnikIme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikPrezime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KorisnikPrezime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KorisnikPrezime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikTelefon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KorisnikTelefon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KorisnikTelefon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KorisnikTip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("KorisnikTip", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.KorisnikTip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sačuvaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Odustani", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
